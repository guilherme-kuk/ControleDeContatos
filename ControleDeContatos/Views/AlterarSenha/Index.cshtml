@using ControleDeContatos.Enums
@model AlterarSenhaModel;
@{
    ViewData["Title"] = "Alterar Senha do Usuário";
}
<div class="text-center">
    <h1 class="display-4">Alterar Senha do Usuário</h1>
</div>

@if (TempData["MensagemSucesso"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["MensagemSucesso"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
@if (TempData["MensagemErro"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["MensagemErro"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<form asp-controller="AlterarSenha" asp-action="Alterar" method="post">
    <div class="mb-3">
        <label for="senhaAtual" class="form-label">Senha Atual</label>
        <input type="password" asp-for="SenhaAtual" class="form-control" id="senhaAtual" placeholder="Digite a senha atual do usuário">
        @Html.ValidationMessageFor(x => x.SenhaAtual)
    </div>
    <div class="mb-3">
        <label for="novaSenha" class="form-label">Nova Senha</label>
        <input type="password" asp-for="NovaSenha" class="form-control" id="novaSenha" placeholder="Digite a nova senha do usuário">
        @Html.ValidationMessageFor(x => x.NovaSenha)
    </div>
    <div class="mb-3">
        <label for="confirmarSenha" class="form-label">Confirmar Nova Senha</label>
        <input type="password" asp-for="ConfirmarNovaSenha" class="form-control" id="confirmarSenha" placeholder="Confirme a nova senha do usuário">
        @Html.ValidationMessageFor(x => x.ConfirmarNovaSenha)
    </div>


    <button type="submit" class="btn btn-success">Salvar</button>
    <a class="btn btn-primary" asp-controller="Home" asp-action="Index" role="button">Voltar</a>
</form>